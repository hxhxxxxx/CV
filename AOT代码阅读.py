这里主要先来看一下 demo.py 里面做的工作

最开始定义了一个overpaly的函数，它用于在图像上叠加一个颜色掩码，接受一个图像，一个掩码，一组颜色，一个颜色比例与一个透明度作为输入
它是的图像上的每个分割对象都有一个独特的颜色，并且该掩码的边框是黑色的

然后大体介绍一下demo.py 中所执行的操作：

1.首先 设置视频帧率和GPU ID
2.其次 加载预训练模型，并将模型放到指定的GPU上面
3. 然后 从指定路径加载模型的检查点
4. 接着 构建一个名为AOT的引擎，用于执行模型的推理
5. 然后 准备每个序列的数据集。这包括应用一些图像转换，读取图像和标签的路径，以及创建一个数据集对象
6.紧接着 就是进行推理。首先 为每个序列创建一个数据加载器，然后对每个序列的每一帧进行一下操作
        如果是第一帧，创建一个视频写入器，并添加一个参考帧到引擎中
        如果不是第一帧，执行以下操作：预测当前帧的分割掩码，更新引擎的记忆，保存预测的标签，读取输入图像，并将预测的标签叠加到输入图像上，然后写入视频
7. 最后 保存可视化视频

接着具体看一下是怎么进行操作的：

